{"version":3,"sources":["/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/$_lazy_route_resource lazy","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app-routing.module.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.component.css","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.component.html","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.component.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.module.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/dashboard/dashboard.component.css","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/dashboard/dashboard.component.html","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/dashboard/dashboard.component.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/environments/environment.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/main.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-card/project-card.component.css","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-card/project-card.component.html","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-card/project-card.component.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-detail/project-detail.component.css","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-detail/project-detail.component.html","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-detail/project-detail.component.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project.service.ts","/Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ProjectCardComponent } from '../project-card/project-card.component';\nimport { ProjectDetailComponent } from '../project-detail/project-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/projects/', pathMatch: 'full' },\n  { path: 'projects', redirectTo: '/projects/', pathMatch: 'full' },\n  { path: 'projects/', component: DashboardComponent },\n  { path: 'projects/detail/:id', component: ProjectDetailComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-card {\\n    margin: .333333rem;\\n    overflow: hidden;\\n}\\n\\n.mat-toolbar.mat-primary {\\n    box-shadow: 0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    z-index: 2;\\n}\\n\\n.sidenav-content {\\n    position: relative;\\n    top: 70px;\\n}\\n\\n#spinner {\\n    top: 50%;\\n    left: 50%;\\n    z-index: 2;\\n    position: absolute;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-spinner id=\\\"spinner\\\" *ngIf=\\\"busyIndicatorDisabled === false\\\"></mat-spinner>\\n\\n<mat-sidenav-container fullscreen>\\n    <mat-sidenav #sidenav mode=\\\"side\\\" opened=\\\"false\\\" class=\\\"app-sidenav\\\">\\n        <mat-nav-list>\\n          <a mat-list-item class=\\\"sidenav-link\\\" routerLink=\\\"/dashboard\\\" (click)=\\\"sidenav.toggle()\\\">\\n            <mat-icon mat-list-icon><i class=\\\"material-icons\\\">panorama_wide_angle</i></mat-icon>\\n            <span class=\\\"title\\\" mat-line>Projects</span>\\n            <span mat-line class=\\\"secondary\\\">Show Projects</span>\\n          </a>\\n          <a mat-list-item class=\\\"sidenav-link\\\" routerLink=\\\"/about\\\" (click)=\\\"sidenav.toggle()\\\">\\n            <mat-icon mat-list-icon>android</mat-icon>\\n            <span class=\\\"title\\\" mat-line>About</span>\\n          </a>\\n          <a mat-list-item class=\\\"sidenav-link\\\" routerLink=\\\"/imprint\\\" (click)=\\\"sidenav.toggle()\\\">\\n            <mat-icon mat-list-icon>android</mat-icon>\\n            <span class=\\\"title\\\" mat-line>Imprint</span>\\n          </a>\\n        </mat-nav-list>\\n      </mat-sidenav>\\n      <mat-toolbar color=\\\"primary\\\">\\n          <mat-toolbar-row>\\n            <button mat-icon-button (click)=\\\"sidenav.toggle()\\\" class=\\\"mat-icon-button sidenav-toggle-button\\\" [hidden]=\\\"sidenav.opened\\\">\\n              <mat-icon aria-label=\\\"Menu\\\" class=\\\"material-icons\\\">menu</mat-icon>\\n            </button>\\n      \\n            <h1 class=\\\"component-title\\\">\\n              <a class=\\\"title-link\\\">{{title}}</a>\\n            </h1>\\n          </mat-toolbar-row>\\n      </mat-toolbar>\\n\\n  <div class=\\\"sidenav-content\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n\\n</mat-sidenav-container>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\nimport { EventEmitter } from 'events';\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {\n  title = 'Lens Wide Shut - Projects';\n  private busyIndicatorDisabled = false;\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit() {\n    const self = this;\n    this.projectService.busyIndicator.subscribe(active => {\n      setTimeout( () => {\n        self.busyIndicatorDisabled = !active;\n      });\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {MatButtonModule, MatCardModule, MatToolbarModule, MatSidenavModule, MatIconModule , MatGridListModule,\n   MatListModule, MatProgressSpinnerModule} from '@angular/material';\n\nimport * as angularGrid from 'angulargrid';\n\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ProjectDetailComponent } from '../project-detail/project-detail.component';\nimport { ProjectCardComponent } from '../project-card/project-card.component';\nimport { ProjectService } from '../project.service';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    ProjectCardComponent,\n    ProjectDetailComponent\n  ],\n  imports: [\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatListModule\n  ],\n  providers: [ProjectService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/app/app.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".project-card {\\n    width: 300px;\\n    position:relative;\\n    display: inline-block;\\n    margin: 5px;\\n    float: left;\\n}\\n\\nmat-card.project-card.mat-card:hover {\\n    cursor: pointer;\\n}\\n\\n.mat-card-header {\\n    text-align: left;\\n}\\n\\n@media (max-width: 600px) {\\n    .project-card {\\n       float: none;\\n    }\\n    .dashboard-sidenav-content {\\n        text-align: center;\\n    }\\n}\\n\\n.dashboard-sidenav-content {\\n    height: 100%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/dashboard/dashboard.component.css\n// module id = ../../../../../src/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"dashboard-sidenav-content\\\">\\n    <mat-card *ngFor=\\\"let project of projects\\\" routerLink=\\\"/projects/detail/{{project.id}}\\\" class=\\\"project-card\\\">\\n        <mat-card-header>\\n            <div mat-card-avatar class=\\\"dashboard-header-image\\\"></div>\\n            <mat-card-title>{{project.title}}</mat-card-title>\\n            <mat-card-subtitle>{{project.text}}</mat-card-subtitle>\\n        </mat-card-header>\\n        <img mat-card-image src=\\\"{{project.coverurl}}\\\" alt=\\\"Photo of {{project.title}}\\\">\\n        <mat-card-content>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/dashboard/dashboard.component.html\n// module id = ../../../../../src/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../project.service';\nimport { Project } from '../project';\nimport { ProjectCardComponent } from '../project-card/project-card.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [ './dashboard.component.css' ]\n})\nexport class DashboardComponent implements OnInit {\n  projects: Project[] = [];\n\n  constructor(private projectService: ProjectService) { }\n\n  ngOnInit() {\n    this.projectService.busyIndicator.next(true);\n    this.getProjects();\n  }\n\n  getProjects(): void {\n    this.projectService.getProjects()\n      .subscribe(projects => {\n        this.projectService.busyIndicator.next(false);\n        this.projects = projects;\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/dashboard/dashboard.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'hammerjs';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/main.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-card/project-card.component.css\n// module id = ../../../../../src/project-card/project-card.component.css\n// module chunks = main","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>Wedding</mat-card-title>\\n        <mat-card-subtitle>17.08.2017</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <p>\\n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n        bred for hunting.\\n        </p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <button mat-button>LIKE</button>\\n        <button mat-button>SHARE</button>\\n    </mat-card-actions>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-card/project-card.component.html\n// module id = ../../../../../src/project-card/project-card.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Project } from '../project';\nimport { ProjectService } from '../project.service';\n\n@Component({\n  selector: 'app-project-card',\n  templateUrl: './project-card.component.html',\n  styleUrls: [ './project-card.component.css' ]\n})\nexport class ProjectCardComponent {\n  projects: Project[] = [];\n\n  constructor(private projectService: ProjectService) { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-card/project-card.component.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".project-detail {\\n    width: 100%;\\n    height: 100%;\\n    position: relative;\\n    overflow: hidden;\\n}\\n.project-detail ul {\\n    margin: 0;\\n    padding: 0;\\n}\\n\\n@media (min-width: 640px) {\\n    .project-detail ul li {\\n        float: left;\\n        width: 33.33%;\\n    }\\n}\\n\\n.project-detail ul li {\\n    list-style: none;\\n}\\n\\n.project-image {\\n    margin: 0.1em;\\n    display: block;\\n    padding-top: 73%;\\n    height: 0;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-detail/project-detail.component.css\n// module id = ../../../../../src/project-detail/project-detail.component.css\n// module chunks = main","module.exports = \"<section class=\\\"project-detail\\\">\\n    <ul>\\n        <li *ngFor=\\\"let image of project.images\\\">\\n            <a [style.background]=\\\"getBackground(image.url)\\\" class=\\\"project-image\\\" [style.backgroundSize]=\\\"'cover'\\\"></a>\\n        </li>\\n    </ul>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-detail/project-detail.component.html\n// module id = ../../../../../src/project-detail/project-detail.component.html\n// module chunks = main","import { Component, OnInit, Input, ViewChild, ViewChildren, ElementRef, QueryList, SimpleChanges } from '@angular/core';\nimport { Project } from '../project';\nimport { ProjectService } from '../project.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-project-detail',\n  templateUrl: './project-detail.component.html',\n  styleUrls: [ './project-detail.component.css' ]\n})\nexport class ProjectDetailComponent implements OnInit {\n    @Input() project: Project = <Project>{};\n    @ViewChild('galleryContainer') galleryContainer: ElementRef;\n    @ViewChildren('imageElement') imageElements: QueryList<any>;\n\n    private images: any[] = [];\n    private gallery: any[] = [];\n\n    constructor(\n        private projectService: ProjectService,\n        private route: ActivatedRoute,\n        private location: Location,\n        private sanitizer: DomSanitizer\n    ) { }\n\n  async ngOnInit() {\n    this.projectService.busyIndicator.next(true);\n    this.getProject();\n  }\n\n  getProject(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.projectService.getProject(id)\n      .subscribe(project => {\n        this.projectService.busyIndicator.next(false);\n        this.project = project;\n      });\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  getBackground (image) {\n    return this.sanitizer.bypassSecurityTrustStyle(`url(${image})`);\n}\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  public ngOnChanges(changes: SimpleChanges) {\n    // input params changed\n    console.log(changes);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project-detail/project-detail.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Project } from './project';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class ProjectService {\n\n  private projectsUrl = 'api/projects';  // URL to web api\n  public busyIndicator  = new ReplaySubject<boolean>();\n\n  constructor(\n    private http: HttpClient) { }\n\n  /** GET projects from the server */\n  getProjects (): Observable<Project[]> {\n    return this.http.get<Project[]>(this.projectsUrl)\n      .pipe(\n        tap(projects => this.log(`fetched projects`)),\n        catchError(this.handleError('getprojects', []))\n      );\n      /*\n      return Observable.create(observer => {\n        setTimeout(() => {\n          observer.next([{id: '1', title: 'myTitle'}, {id: '2', title: 'myTitle2'}, {id: '3', title: 'myTitle3'}]);\n          console.log('am done');\n          observer.complete();\n        }, 2000);\n      });\n      */\n  }\n\n  /** GET Project by id. Return `undefined` when id not found */\n  getProjectNo404<Data>(id: number): Observable<Project> {\n    const url = `${this.projectsUrl}/?id=${id}`;\n    return this.http.get<Project[]>(url)\n      .pipe(\n        map(projects => projects[0]), // returns a {0|1} element array\n        tap(h => {\n          const outcome = h ? `fetched` : `did not find`;\n          this.log(`${outcome} Project id=${id}`);\n        }),\n        catchError(this.handleError<Project>(`getProject id=${id}`))\n      );\n  }\n\n  /** GET Project by id. Will 404 if id not found */\n  getProject(id: number): Observable<Project> {\n    const url = `${this.projectsUrl}/${id}`;\n\n    return this.http.get<Project>(url).pipe(\n      tap(_ => this.log(`fetched Project id=${id}`)),\n      catchError(this.handleError<Project>(`getProject id=${id}`))\n    );\n\n    /*\n    return Observable.create(observer => {\n      setTimeout(() => {\n        observer.next({id: '1', title: 'myTitle', images: ['ww', 'ss']});\n        console.log('am done');\n        observer.complete();\n      }, 0);\n    });\n    */\n  }\n\n  /* GET projects whose name contains search teerm */\n  searchprojects(term: string): Observable<Project[]> {\n    if (!term.trim()) {\n      // if not search term, return empty Project array.\n      return of([]);\n    }\n    return this.http.get<Project[]>(`api/projects/?name=${term}`).pipe(\n      tap(_ => this.log(`found projects matching \"${term}\"`)),\n      catchError(this.handleError<Project[]>('searchprojects', []))\n    );\n  }\n\n  //////// Save methods //////////\n\n  /** POST: add a new Project to the server */\n  addProject (project: Project): Observable<Project> {\n    return this.http.post<Project>(this.projectsUrl, Project, httpOptions).pipe(\n      // tslint:disable-next-line:no-shadowed-variable\n      tap((project: Project) => this.log(`added Project w/ id=${project.id}`)),\n      catchError(this.handleError<Project>('addProject'))\n    );\n  }\n\n  /** PUT: update the Project on the server */\n  updateProject (project: Project): Observable<any> {\n    return this.http.put(this.projectsUrl, project, httpOptions).pipe(\n      tap(_ => this.log(`updated Project id=${project.id}`)),\n      catchError(this.handleError<any>('updateProject'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a ProjectService message with the MessageService */\n  private log(message: string) {\n    console.log('ProjectService: ' + message);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project.service.ts","import { SafeStyle } from '@angular/platform-browser/src/security/dom_sanitization_service';\n\nexport class Project {\n    id: number;\n    text: string;\n    title: string;\n    images: [SafeStyle];\n    coverurl: string;\n    createdon: string;\n    category: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stefanhipfel/Development/projects/lens-wide-shut/lws-projects/src/project.ts"],"sourceRoot":"webpack:///"}